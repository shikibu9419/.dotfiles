[
    // Open command pallet
    {
        "key": "ctrl+p",
        "command": "workbench.action.showCommands",
        "when": "activeEditorGroupEmpty || editorTextFocus && !suggestWidgetVisible && neovim.mode == 'normal'"
    },
    {
        "key": "ctrl+f ctrl+p",
        "command": "workbench.action.showCommands",
        "when": "activeEditorGroupEmpty || editorTextFocus && !suggestWidgetVisible && neovim.mode == 'normal'"
    },
    {
        "key": "ctrl+z ctrl+z",
        "command": "workbench.action.toggleZenMode"
    },
    // File search
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpen",
        "when": "editorFocus && neovim.mode == normal || activeEditorGroupEmpty"
    },
    {
        "key": "ctrl+[",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    },
    // terminal
    {
        "key": "Ctrl+t",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "neovim.mode == normal"
    },

    // LSP actions (jump to implementation / declaration, rename)
    {
        "key": "ctrl+g ctrl+i",
        "command": "editor.action.goToImplementation",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+g ctrl+d",
        "command": "editor.action.goToDeclaration",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+g ctrl+r",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },

    // multiple cursor
    {
        "command": "vscode-neovim.send",
        "key": "ctrl+n",
        "when": "editorTextFocus&& !inDebugRepl && neovim.init && neovim.mode != insert",
        "args": "<c-n>"
    },
    // {
    //     "key": "ctrl+m",
    //     "command": "editor.action.addSelectionToNextFindMatch",
    //     "when": "editorTextFocus && !inDebugRepl && neovim.init && neovim.mode == normal"
    // },
    // {
    //     "key": "ctrl+shift+m",
    //     "command": "editor.action.selectHighlights",
    //     "when": "editorTextFocus && neovim.mode != insert"
    // },
    // {
    //     "key": "ctrl+shift+l",
    //     "command": "editor.action.insertCursorAtEndOfEachLineSelected",
    //     "when": "editorTextFocus && neovim.mode != insert && editorHasMultipleSelections"
    // },
    // Close editor group
    {
        "key": "ctrl+q ctrl+q",
        "command": "workbench.action.closeEditorsAndGroup"
    },

    // Cancellations
    {
        "key": "ctrl+[",
        "command": "search.action.cancel",
        "when": "listFocus && searchViewletFocus"
    },
    {
        "key": "ctrl+[",
        "command": "settings.action.clearSearchResults",
        "when": "inSettingsSearch"
    },
    {
        "key": "ctrl+[",
        "command": "keybindings.editor.clearSearchResults",
        "when": "inKeybindings && inKeybindingsSearch"
    },

    //----------------------------------------------------------
    // Like CLI actions
    //----------------------------------------------------------
    // Move between editors / groups
    {
        "key": "ctrl+h",
        "command": "workbench.action.previousEditor",
        "when": "neovim.init && neovim.mode == normal && editorFocus && !renameInputVisible"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.nextEditor",
        "when": "neovim.init && neovim.mode == normal && editorFocus && !renameInputVisible"
    },

    {
        "key": "ctrl+f k",
        "command": "workbench.action.focusAboveGroup"
    },
    {
        "key": "ctrl+f j",
        "command": "workbench.action.focusBelowGroup"
    },
    {
        "key": "ctrl+f h",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+f l",
        "command": "workbench.action.focusRightGroup"
    },
    // Create / Resize editor group
    {
        "key": "ctrl+f v",
        "command": "workbench.action.newGroupRight"
    },
    {
        "key": "ctrl+f s",
        "command": "workbench.action.newGroupBelow"
    },
    {
        "key": "ctrl+f m",
        "command": "workbench.action.maximizeEditor"
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.increaseViewSize",
        "when": "!editorHasMultipleSelections"
    },
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.decreaseViewSize",
        "when": "!editorHasMultipleSelections"
    },
    {
        "key": "ctrl+f ,",
        "command": "workbench.action.evenEditorWidths"
    },

    //----------------------------------------------------------
    // Extentions
    //----------------------------------------------------------
    // neovim
    {
        "command": "vscode-neovim.compositeEscape1",
        "key": "j",
        "when": "neovim.mode == insert",
        "args": "j"
    },
    // snippets
    {
        "key": "ctrl+k",
        "command": "insertSnippet",
        "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
    },
    {
        "key": "ctrl+n",
        "command": "jumpToNextSnippetPlaceholder",
        "when": "editorTextFocus && hasNextTabstop && inSnippetMode"
    },
    {
        "key": "ctrl+p",
        "command": "jumpToPrevSnippetPlaceholder",
        "when": "editorTextFocus && hasPrevTabstop && inSnippetMode"
    },
    // Dash
    {
        "key": "ctrl+d ctrl+d",
        "command": "extension.dash.specific",
        "when": "editorTextFocus"
    },

    //----------------------------------------------------------
    // On sidebar
    //----------------------------------------------------------
    // toggle sidebar
    {
        "key": "ctrl+s s",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "!inDebugMode && neovim.mode == normal"
    },
    {
        "key": "ctrl+s ctrl+s",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "!inDebugMode && neovim.mode == normal"
    },
    // focus sidebar
    {
        "key": "ctrl+s f",
        "command": "workbench.action.focusSideBar",
        "when": "neovim.mode == normal"
    },
    {
        "key": "ctrl+s ctrl+f",
        "command": "workbench.action.focusSideBar",
        "when": "neovim.mode == normal"
    },
    // grep search
    {
        "key": "ctrl+s /",
        "command": "workbench.action.findInFiles",
        "when": "!searchInputBoxFocus && neovim.mode == normal"
    },
    {
        "key": "ctrl+s ctrl+/",
        "command": "workbench.action.findInFiles",
        "when": "!searchInputBoxFocus && neovim.mode == normal"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.search.toggleQueryDetails",
        "when": "searchViewletFocus"
    },
    {
        "key": "ctrl+n",
        "command": "search.focus.nextInputBox",
        "when": "searchViewletFocus"
    },
    {
        "key": "ctrl+p",
        "command": "search.focus.previousInputBox",
        "when": "searchViewletFocus"
    },
    // Debug mode
    {
        "key": "ctrl+s d",
        "command": "workbench.view.debug",
        "when": "neovim.mode == normal"
    },
    {
        "key": "ctrl+s ctrl+d",
        "command": "workbench.view.debug",
        "when": "neovim.mode == normal"
    },
    // scm (git ui)
    {
        "key": "ctrl+s g",
        "command": "workbench.view.scm",
        "when": "neovim.mode == normal"
    },
    {
        "key": "ctrl+s ctrl+g",
        "command": "workbench.view.scm",
        "when": "neovim.mode == normal"
    },
    // outline
    {
        "key": "ctrl+s o",
        "command": "outline.focus",
        "when": "neovim.mode == normal"
    },
    {
        "key": "ctrl+s ctrl+o",
        "command": "outline.focus",
        "when": "neovim.mode == normal"
    },
    // explorer
    {
        "key": "ctrl+s n",
        "command": "workbench.view.explorer",
        "when": "neovim.mode == normal"
    },
    {
       "key": "ctrl+s ctrl+n",
        "command": "workbench.view.explorer",
        "when": "neovim.mode == normal"
    },
    // extensions
    {
        "key": "ctrl+s e",
        "command": "workbench.view.extensions",
        "when": "neovim.mode == normal"
    },
    {
        "key": "ctrl+s ctrl+e",
        "command": "workbench.view.extensions",
        "when": "neovim.mode == normal"
    },
    // [explorer] Open / Rename file
    {
        "key": "ctrl+c",
        "command": "filesExplorer.copy",
        "when": "explorerViewletFocus && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+x",
        "command": "filesExplorer.cut",
        "when": "explorerViewletFocus && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+v",
        "command": "filesExplorer.paste",
        "when": "explorerViewletFocus && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+d",
        "command": "moveFileToTrash",
        "when": "explorerResourceMoveableToTrash && explorerViewletFocus && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "d d",
        "command": "moveFileToTrash",
        "when": "explorerResourceMoveableToTrash && explorerViewletFocus && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+r",
        "command": "renameFile",
        "when": "explorerViewletFocus && filesExplorerFocus"
    },
    {
        "key": "ctrl+n",
        "command": "explorer.newFile",
        "when": "explorerViewletFocus && filesExplorerFocus"
    },
    {
        "key": "ctrl+f",
        "command": "explorer.newFolder",
        "when": "explorerViewletFocus && filesExplorerFocus"
    },

    //----------------------------------------------------------
    // Disables
    //----------------------------------------------------------
    {
        "key": "ctrl+n",
        "command": "-cursorDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+p",
        "command": "-cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+h",
        "command": "-extension.dash.specific",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+f",
        "command": "-cursorRight",
        "when": "textInputFocus"
    },
    {
        "key": "enter",
        "command": "-renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "cmd+k z",
        "command": "-workbench.action.toggleZenMode"
    },
    {
        "key": "shift+alt+i",
        "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.view.search",
        "when": "!searchViewletVisible"
    },
    {
        "key": "shift+cmd+j",
        "command": "-workbench.action.search.toggleQueryDetails",
        "when": "searchViewletVisible"
    },
    {
        "key": "shift+cmd+x",
        "command": "-workbench.view.extensions"
    },
    {
        "key": "ctrl+a",
        "command": "-vscode-neovim.ctrl-a-insert",
        "when": "editorTextFocus && neovim.ctrlKeysInsert && !neovim.recording && neovim.mode == insert"
    },
    {
        "key": "ctrl+n",
        "command": "search.action.focusNextSearchResult",
        "when": "hasSearchResult && editorFocus && neovim.mode == normal"
    },
    {
        "key": "f4",
        "command": "-search.action.focusNextSearchResult"
    },
    {
        "key": "ctrl+shift+n",
        "command": "search.action.focusPreviousSearchResult",
        "when": "hasSearchResult && editorFocus && neovim.mode == normal"
    },
    {
        "key": "shift+f4",
        "command": "-search.action.focusPreviousSearchResult"
    },
    {
        "key": "ctrl+c",
        "command": "-vscode-neovim.escape",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+c",
        "command": "-vscode-neovim.escape",
        "when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.init && neovim.mode == 'insert'"
    }
]
