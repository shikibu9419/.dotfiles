[
    // Open command pallet
    {
        "key": "ctrl+p",
        "command": "workbench.action.showCommands",
        "when": "editorTextFocus && vim.mode != 'CommandlineInProgress' && vim.mode != 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+z ctrl+z",
        "command": "workbench.action.toggleZenMode"
    },
    // File search
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpen",
        "when": "editorTextFocus && vim.mode != 'CommandlineInProgress'"
    },
    {
        "key": "ctrl+[",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    },
    // terminal
    {
        "key": "Ctrl+t",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "vim.mode == 'Normal'"
    },

    // LSP actions (jump to implementation / declaration, rename)
    {
        "key": "ctrl+g ctrl+i",
        "command": "editor.action.goToImplementation",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+g ctrl+d",
        "command": "editor.action.goToDeclaration",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+g ctrl+r",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },

    // multiple cursor
    {
        "key": "ctrl+n",
        "command": "extension.vim_cmd+d",
        "when": "editorTextFocus && !inDebugRepl && vim.active && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+shift+n",
        "command": "editor.action.selectHighlights",
        "when": "editorTextFocus && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+shift+l",
        "command": "editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus && vim.mode != 'Insert' && editorHasMultipleSelections"
    },
    // Comment toggle
    {
        "key": "ctrl+c",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    // Close editor group
    {
        "key": "ctrl+q ctrl+q",
        "command": "workbench.action.closeEditorsAndGroup"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.files.newUntitledFile",
        "when": "activeEditorGroupEmpty"
    },

    // Cancellations
    {
        "key": "ctrl+[",
        "command": "search.action.cancel",
        "when": "listFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+[",
        "command": "settings.action.clearSearchResults",
        "when": "inSettingsSearch"
    },
    {
        "key": "ctrl+[",
        "command": "keybindings.editor.clearSearchResults",
        "when": "inKeybindings && inKeybindingsSearch"
    },

    //----------------------------------------------------------
    // Like CLI actions
    //----------------------------------------------------------
    // Move between editors / groups
    {
        "key": "ctrl+h",
        "command": "workbench.action.previousEditor",
        "when": "vim.active && vim.mode == 'Normal' && editorFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.nextEditor",
        "when": "vim.active && vim.mode == 'Normal' && editorFocus"
    },

    {
        "key": "ctrl+f k",
        "command": "workbench.action.focusAboveGroup"
    },
    {
        "key": "ctrl+f j",
        "command": "workbench.action.focusBelowGroup"
    },
    {
        "key": "ctrl+f h",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+f l",
        "command": "workbench.action.focusRightGroup"
    },
    // Create / Resize editor group
    {
        "key": "ctrl+f v",
        "command": "workbench.action.newGroupRight"
    },
    {
        "key": "ctrl+f s",
        "command": "workbench.action.newGroupBelow"
    },
    {
        "key": "ctrl+f m",
        "command": "workbench.action.maximizeEditor"
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.increaseViewSize",
        "when": "!editorHasMultipleSelections"
    },
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.decreaseViewSize",
        "when": "!editorHasMultipleSelections"
    },
    {
        "key": "ctrl+f ,",
        "command": "workbench.action.evenEditorWidths"
    },

    //----------------------------------------------------------
    // Extentions
    //----------------------------------------------------------
    // [vim] on command mode
    {
        "key": "ctrl+p",
        "command": "extension.vim_up",
        "when": "vim.active && vim.mode == 'CommandlineInProgress' || vim.mode == 'SearchInProgressMode' && !inDebugRepl && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+n",
        "command": "extension.vim_down",
        "when": "vim.active && vim.mode == 'CommandlineInProgress' || vim.mode == 'SearchInProgressMode' && !inDebugRepl && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    },
    // Snippets
    {
        "key": "ctrl+k",
        "command": "insertSnippet",
        "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
    },
    {
        "key": "ctrl+n",
        "command": "jumpToNextSnippetPlaceholder",
        "when": "editorTextFocus && hasNextTabstop && inSnippetMode"
    },
    {
        "key": "ctrl+p",
        "command": "jumpToPrevSnippetPlaceholder",
        "when": "editorTextFocus && hasPrevTabstop && inSnippetMode"
    },
    // Dash
    {
        "key": "ctrl+d",
        "command": "extension.dash.specific",
        "when": "editorTextFocus"
    },

    //----------------------------------------------------------
    // On sidebar
    //----------------------------------------------------------
    // toggle sidebar
    {
        "key": "ctrl+s s",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "!inDebugMode && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+s ctrl+s",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "!inDebugMode && vim.mode == 'Normal'"
    },
    // focus sidebar
    {
        "key": "ctrl+s f",
        "command": "workbench.action.focusSideBar",
        "when": "vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+s ctrl+f",
        "command": "workbench.action.focusSideBar",
        "when": "vim.mode == 'Normal'"
    },
    // grep search
    {
        "key": "ctrl+s /",
        "command": "workbench.action.findInFiles",
        "when": "!searchInputBoxFocus && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+s ctrl+/",
        "command": "workbench.action.findInFiles",
        "when": "!searchInputBoxFocus && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.search.toggleQueryDetails",
        "when": "searchViewletVisible"
    },
    {
        "key": "ctrl+n",
        "command": "search.focus.nextInputBox",
        "when": "searchViewletVisible"
    },
    {
        "key": "ctrl+p",
        "command": "search.focus.previousInputBox",
        "when": "searchViewletVisible"
    },
    // Debug mode
    {
        "key": "ctrl+s d",
        "command": "workbench.view.debug",
        "when": "vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+s ctrl+d",
        "command": "workbench.view.debug",
        "when": "vim.mode == 'Normal'"
    },
    // scm (git ui)
    {
        "key": "ctrl+s g",
        "command": "workbench.view.scm",
        "when": "vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+s ctrl+g",
        "command": "workbench.view.scm",
        "when": "vim.mode == 'Normal'"
    },
    // outline
    {
        "key": "ctrl+s o",
        "command": "outline.focus",
        "when": "vim.mode != 'SearchInProgressMode' && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+s ctrl+o",
        "command": "outline.focus",
        "when": "vim.mode != 'SearchInProgressMode' && vim.mode == 'Normal'"
    },
    // explorer
    {
        "key": "ctrl+s n",
        "command": "workbench.view.explorer",
        "when": "vim.mode != 'SearchInProgressMode' && vim.mode == 'Normal'"
    },
    {
       "key": "ctrl+s ctrl+n",
        "command": "workbench.view.explorer",
        "when": "vim.mode != 'SearchInProgressMode' && vim.mode == 'Normal'"
    },
    // extensions
    {
        "key": "ctrl+s e",
        "command": "workbench.view.extensions",
        "when": "vim.mode != 'SearchInProgressMode' && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+s ctrl+e",
        "command": "workbench.view.extensions",
        "when": "vim.mode != 'SearchInProgressMode' && vim.mode == 'Normal'"
    },
    // [explorer] Open / Rename file
    {
        "key": "ctrl+n",
        "command": "explorer.newFile",
        "when": "explorerViewletVisible && filesExplorerFocus"
    },
    {
        "key": "ctrl+r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus"
    },

    //----------------------------------------------------------
    // Disables
    //----------------------------------------------------------
    {
        "key": "ctrl+n",
        "command": "-cursorDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+p",
        "command": "-cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+h",
        "command": "-extension.dash.specific",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+f",
        "command": "-cursorRight",
        "when": "textInputFocus"
    },
    {
        "key": "enter",
        "command": "-renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "cmd+k z",
        "command": "-workbench.action.toggleZenMode"
    },
    {
        "key": "shift+alt+i",
        "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.view.search",
        "when": "!searchViewletVisible"
    },
    {
        "key": "shift+cmd+j",
        "command": "-workbench.action.search.toggleQueryDetails",
        "when": "searchViewletVisible"
    },
    {
        "key": "shift+cmd+x",
        "command": "-workbench.view.extensions"
    }
]