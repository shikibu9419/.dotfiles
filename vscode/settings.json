{
    //----------------------------------------------------------
    // Editor
    //----------------------------------------------------------
    "editor.fontFamily": "RictyDiminished NF",
    "editor.fontSize": 14,
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.renderLineHighlight": "all",
    "editor.renderWhitespace": "boundary",
    "editor.cursorStyle": "line",
    "editor.wordWrap": "on",
    "editor.wordSeparators": "./\\()\"'-:,.;<>~!@#$%^&*|+=[]{}`~?　、。「」【】『』（）！？てにをはがのともへでや",
    "editor.renderControlCharacters": true,
    "editor.renderIndentGuides": true,
    "editor.multiCursorModifier": "ctrlCmd",
    "editor.minimap.enabled": false,
    "editor.snippetSuggestions": "top",
    "breadcrumbs.enabled": true,
    "debug.inlineValues": true,

    //----------------------------------------------------------
    // workbench
    //----------------------------------------------------------
    "workbench.tree.indent": 4,
    "workbench.editor.closeEmptyGroups": false,
    "workbench.editor.revealIfOpen": true,
    "workbench.editor.highlightModifiedTabs": true,
    "workbench.editor.showTabs": true,
    "workbench.editor.enablePreview": false,
    "workbench.editor.enablePreviewFromQuickOpen": false,
    "workbench.editor.tabSizing": "shrink",
    "workbench.editor.openPositioning": "first",
    "explorer.openEditors.visible": 0,
    // color theme
    "workbench.colorTheme": "Hybrid Next (Gray Background)",
    "materialTheme.accent": "Acid Lime",
    "workbench.colorCustomizations": {
        "activityBarBadge.background": "#C6FF00",
        "list.activeSelectionForeground": "#C6FF00",
        "list.inactiveSelectionForeground": "#C6FF00",
        "list.highlightForeground": "#C6FF00",
        "scrollbarSlider.activeBackground": "#C6FF0050",
        "editorSuggestWidget.highlightForeground": "#C6FF00",
        "textLink.foreground": "#C6FF00",
        "progressBar.background": "#C6FF00",
        "pickerGroup.foreground": "#C6FF00",
        "tab.activeBorder": "#C6FF00",
        "notificationLink.foreground": "#C6FF00",
        "editorWidget.resizeBorder": "#C6FF00",
        "editorWidget.border": "#C6FF00",
        "settings.modifiedItemIndicator": "#C6FF00",
        "settings.headerForeground": "#C6FF00",
        "panelTitle.activeBorder": "#C6FF00",
        "breadcrumb.activeSelectionForeground": "#C6FF00",
        "menu.selectionForeground": "#C6FF00",
        "menubar.selectionForeground": "#C6FF00",
        "statusBar.background": "#8FBCBB",
        "statusBar.noFolderBackground": "#8FBCBB",
        "statusBar.debuggingBackground": "#8FBCBB"
    },

    //----------------------------------------------------------
    // files
    //----------------------------------------------------------
    "files.autoSave": "afterDelay",
    "files.autoSaveDelay": 100,
    "files.associations": {
        "*.sql": "sql",
        "*.vue": "vue"
    },
    "files.trimFinalNewlines": false,

    // excludes
    "files.exclude": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/.venv": true,
        "**/.ipynb_checkpoints": true,
        "**/__pycache__": true,
        "**/.classpath": true,
        "**/.project": true,
        "**/.settings": true,
        "**/.factorypath": true
    },
    "files.watcherExclude": {
        "**/.git/objects": true,
        "**/.git/subtree-cache": true,
        "**/node_modules": true,
        "**/images/**": true
    },
    "search.exclude": {
        "**/bower_components": true,
        "**/node_modules": true,
        "**/tmp/cache": true,
        "**/vendor": true,
        "**/env": true,
        "**/.vscode": true
    },

    //----------------------------------------------------------
    // others
    //----------------------------------------------------------
    "window.openFilesInNewWindow": "on",
    "window.zoomLevel": 0,
    // Terminal
    "terminal.integrated.copyOnSelection": true,
    "terminal.integrated.fontSize": 12,

    // zen mode
    "zenMode.fullScreen": true,
    "zenMode.centerLayout": true,
    "zenMode.hideActivityBar": true,
    "zenMode.hideLineNumbers": false,
    "zenMode.hideTabs": false,
    "zenMode.hideStatusBar": true,
    "zenMode.restore": false,

    //----------------------------------------------------------
    // extensions
    //----------------------------------------------------------
    "extensions.autoUpdate": true,

    "code-runner.clearPreviousOutput": true,
    "code-runner.runInTerminal": true,

    // python / julia
    "julia.enableTelemetry": true,
    "julia.enableCrashReporter": true,
    "julia.executablePath": "/usr/local/bin/julia",

    // html
    "html.autoClosingTags": true,
    "html.mirrorCursorOnMatchingTag": false,
    "[html]": {
        "editor.formatOnSave": true,
        "editor.formatOnPaste": true
    },
    "emmet.includeLanguages": {
        "twig": "html",
        "vue-html": "html",
        "javascript": "javascriptreact"
    },
    "emmet.syntaxProfiles": {
        "jsx": {
            "self_closing_tag": true
        }
    },
    "emmet.triggerExpansionOnTab": true,

    // css
    "css.lint.float": "error",
    "css.lint.propertyIgnoredDueToDisplay": "error",
    "css.lint.universalSelector": "error",
    "css.lint.boxModel": "error",
    "css.lint.duplicateProperties": "error",
    "css.lint.idSelector": "error",

    // javascript
    "javascript.updateImportsOnFileMove.enabled": "always",
    "typescript.tsc.autoDetect": "off",
    "grunt.autoDetect": "off",
    "jake.autoDetect": "off",
    "npm.autoDetect": "off",
    "gulp.autoDetect": "off",

    // vetur
    "vetur.format.options.tabSize": 2,
    "vetur.format.options.useTabs": false,
    "vetur.format.defaultFormatter.html": "prettyhtml",
    "vetur.format.defaultFormatter.css": "prettier",
    "vetur.format.defaultFormatter.postcss": "prettier",
    "vetur.format.defaultFormatter.scss": "prettier",
    "vetur.format.defaultFormatter.less": "prettier",
    "vetur.format.defaultFormatter.stylus": "stylus-supremacy",
    "vetur.format.defaultFormatter.js": "prettier",
    "vetur.format.defaultFormatter.ts": "prettier",
    "vetur.format.defaultFormatterOptions": {
        "prettier": {
          "semi": false
        }
      },
    "eslint.validate": [
        "javascript",
        "javascriptreact",
        "vue"
      ],

    // git
    "git.autofetch": true,
    "gitlens.advanced.messages": {
        "suppressShowKeyBindingsNotice": true
    },

    // vim
    "vim.leader": "<space>",
    "vim.enableNeovim": true,
    "vim.neovimPath":"/usr/local/bin/nvim",
    "vim.useSystemClipboard": true,
    "vim.hlsearch": true,
    "vim.visualstar": true,
    "vim.useCtrlKeys": true,
    "vim.ignorecase": true,
    "vim.incsearch": true,
    "vim.debug.silent": true,
    "vim.easymotion": true,
    "vim.easymotionKeys": "sdfghjkl",
    "vim.camelCaseMotion.enable": true,
    // highlight when yanking text
    "vim.highlightedyank.enable": true,
    "vim.highlightedyank.color": "rgba(143, 188, 187, 0.3)",
    "vim.highlightedyank.duration": 300,
    // status bar
    "vim.statusBarColorControl": false,
    "vim.statusBarColors.normal": "#8FBCBB",
    "vim.statusBarColors.insert": "#A3BE8C",
    "vim.statusBarColors.visual": "#B48EAD",
    "vim.statusBarColors.visualline": "#B48EAD",
    "vim.statusBarColors.visualblock": "#B48EAD",
    "vim.statusBarColors.replace": "#D08770",
    // key bindings
    "vim.normalModeKeyBindingsNonRecursive": [
        { "before": ["k"], "after": ["g", "k"] },
        { "before": ["j"], "after": ["g", "j"] },
        { "before": [";"], "after": [":"] },
        { "before": [":"], "after": [";"] },
        { "before": ["Y"], "after": ["y", "$"] },
        { "before": ["D"], "after": ["d", "$"] },
        { "before": ["H"], "after": ["^"] },
        { "before": ["L"], "after": ["$"] },
        { "before": ["+"], "after": ["<C-a>"] },
        { "before": ["-"], "after": ["<C-x>"] },
        { "before": ["u"],     "commands": [{ "command": "undo" }] },
        { "before": ["<C-r>"], "commands": [{ "command": "redo" }] },
        // sidebar commands (these are also defined in keybindings.json with prefix <Ctrl-s> instead of <Leader>)
        { "before": ["<Leader>", "s"], "commands": [{ "command": "workbench.action.toggleSidebarVisibility" }] },
        { "before": ["<Leader>", "f"], "commands": [{ "command": "workbench.action.focusSideBar" }] },
        { "before": ["<Leader>", "/"], "commands": [{ "command": "workbench.action.findInFiles" }] },
        { "before": ["<Leader>", "d"], "commands": [{ "command": "workbench.view.debug" }] },
        { "before": ["<Leader>", "o"], "commands": [{ "command": "outline.focus" }] },
        { "before": ["<Leader>", "n"], "commands": [{ "command": "workbench.view.explorer" }] },
        { "before": ["<Leader>", "e"], "commands": [{ "command": "workbench.view.extensions" }] }
    ],
    "vim.insertModeKeyBindingsNonRecursive": [
        { "before": ["j", "j"], "after": ["<Esc>"] },
        { "before": ["<C-a>"],  "after": ["<Esc>", "I"] },
        { "before": ["<C-e>"],  "after": ["<Esc>", "A"] }
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        { "before": ["k"], "after": ["g", "k"] },
        { "before": ["j"], "after": ["g", "j"] },
        { "before": [";"], "after": [":"] },
        { "before": [":"], "after": [";"] },
        { "before": [">"], "commands": ["editor.action.indentLines"] },
        { "before": ["<"], "commands": ["editor.action.outdentLines"] }
    ],

    // latex
    "latex-workshop.view.pdf.viewer": "tab",
    "latex-workshop.latex.clean.fileTypes": [
        "*.aux", "*.bbl", "*.blg", "*.idx", "*.ind", "*.lof", "*.lot", "*.out", "*.toc", "*.acn", "*.acr", "*.alg", "*.glg", "*.glo", "*.gls", "*.ist", "*.fls", "*.log", "*.fdb_latexmk"
    ],
    "latex-workshop.latex.recipe.default": "lastUsed",

    //----------------------------------------------------------
    // Editor
    //----------------------------------------------------------
    "terminal.integrated.commandsToSkipShell": [
        "editor.action.toggleTabFocusMode",
        "workbench.action.debug.continue",
        "workbench.action.debug.pause",
        "workbench.action.debug.restart",
        "workbench.action.debug.run",
        "workbench.action.debug.start",
        "workbench.action.debug.stepInto",
        "workbench.action.debug.stepOut",
        "workbench.action.debug.stepOver",
        "workbench.action.debug.stop",
        "workbench.action.firstEditorInGroup",
        "workbench.action.focusActiveEditorGroup",
        "workbench.action.focusEighthEditorGroup",
        "workbench.action.focusFifthEditorGroup",
        "workbench.action.focusFirstEditorGroup",
        "workbench.action.focusFourthEditorGroup",
        "workbench.action.focusLastEditorGroup",
        "workbench.action.focusSecondEditorGroup",
        "workbench.action.focusSeventhEditorGroup",
        "workbench.action.focusSixthEditorGroup",
        "workbench.action.focusThirdEditorGroup",
        "workbench.action.lastEditorInGroup",
        "workbench.action.navigateDown",
        "workbench.action.navigateLeft",
        "workbench.action.navigateRight",
        "workbench.action.navigateUp",
        "workbench.action.openNextRecentlyUsedEditorInGroup",
        "workbench.action.openPreviousRecentlyUsedEditorInGroup",
        "workbench.action.quickOpen",
        "workbench.action.quickOpenPreviousEditor",
        "workbench.action.quickOpenView",
        "workbench.action.showCommands",
        "workbench.action.tasks.build",
        "workbench.action.tasks.restartTask",
        "workbench.action.tasks.runTask",
        "workbench.action.tasks.showLog",
        "workbench.action.tasks.showTasks",
        "workbench.action.tasks.terminate",
        "workbench.action.tasks.test",
        "workbench.action.terminal.clear",
        "workbench.action.terminal.clearSelection",
        "workbench.action.terminal.copySelection",
        "workbench.action.terminal.deleteWordLeft",
        "workbench.action.terminal.deleteWordRight",
        "workbench.action.terminal.focus",
        "workbench.action.terminal.focusAtIndex1",
        "workbench.action.terminal.focusAtIndex2",
        "workbench.action.terminal.focusAtIndex3",
        "workbench.action.terminal.focusAtIndex4",
        "workbench.action.terminal.focusAtIndex5",
        "workbench.action.terminal.focusAtIndex6",
        "workbench.action.terminal.focusAtIndex7",
        "workbench.action.terminal.focusAtIndex8",
        "workbench.action.terminal.focusAtIndex9",
        "workbench.action.terminal.focusFindWidget",
        "workbench.action.terminal.focusNext",
        "workbench.action.terminal.focusNextPane",
        "workbench.action.terminal.focusPrevious",
        "workbench.action.terminal.focusPreviousPane",
        "workbench.action.terminal.hideFindWidget",
        "workbench.action.terminal.kill",
        "workbench.action.terminal.moveToLineEnd",
        "workbench.action.terminal.moveToLineStart",
        "workbench.action.terminal.new",
        "workbench.action.terminal.newInActiveWorkspace",
        "workbench.action.terminal.paste",
        "workbench.action.terminal.resizePaneDown",
        "workbench.action.terminal.resizePaneLeft",
        "workbench.action.terminal.resizePaneRight",
        "workbench.action.terminal.resizePaneUp",
        "workbench.action.terminal.runActiveFile",
        "workbench.action.terminal.runSelectedText",
        "workbench.action.terminal.scrollDown",
        "workbench.action.terminal.scrollDownPage",
        "workbench.action.terminal.scrollToBottom",
        "workbench.action.terminal.scrollToNextCommand",
        "workbench.action.terminal.scrollToPreviousCommand",
        "workbench.action.terminal.scrollToTop",
        "workbench.action.terminal.scrollUp",
        "workbench.action.terminal.scrollUpPage",
        "workbench.action.terminal.selectAll",
        "workbench.action.terminal.selectToNextCommand",
        "workbench.action.terminal.selectToNextLine",
        "workbench.action.terminal.selectToPreviousCommand",
        "workbench.action.terminal.selectToPreviousLine",
        "workbench.action.terminal.split",
        "workbench.action.terminal.splitInActiveWorkspace",
        "workbench.action.terminal.toggleTerminal",
        "workbench.action.togglePanel"
    ]
}
