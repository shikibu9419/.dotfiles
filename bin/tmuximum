#!/bin/bash

## ORIGINAL: https://github.com/arks22/tmuximum
source $DOTPATH/bin/_shared_functions

finder='fzf --ansi'

main() {
  if [ $# -eq 0 ]; then
    tmuximum::operation
  elif [ $# -eq 1 ]; then
    case $1 in
      -s) tmuximum::kill-session ;;
      -w) tmuximum::kill-window ;;
      -h) tmuximum::help ;;
      * ) error "tmuximum: illegal option $1"
    esac
  else
    error 'tmuximum: option must be one'
  fi
}

tmuximum::operation() {
  answer=$(tmuximum::operation-list | $finder)
  case $answer in
    'new session'  ) tmux new-session -d -s new && tmux switch-client -t new ;;
    'new window'*  ) tmux new-window ;;
    'kill sessions') tmuximum::kill-session ;;
    'kill windows' ) tmuximum::kill-window ;;
    'move session'*) tmux switch-client -t $(echo "$answer" | awk '{print $5}' | sed "s/://g") ;;
    'move window'* ) tmux select-window -t $(echo "$answer" | awk '{print $5}' | sed "s/://g") ;;
    *attach*       ) tmux attach -t $(echo "$answer" | awk '{print $4}' | sed 's/://') ;;
    detach         ) tmux detach-client ;;
    exit           ) return 0
  esac
}

tmuximum::operation-list() {
  ## attach / move
  if [ -z $TMUX ]; then
    tmux list-sessions 2>/dev/null | while read line; do
      [[ ! $line =~ attached ]] || line="${GREEN}$line${DEFAULT}"
      echo -e "${GREEN}attach${DEFAULT} ==> [ "$line" ]"
    done
  else
    tmux list-sessions 2>/dev/null | while read line; do
      [[ $line =~ attached ]] && continue
      echo -e "${CYAN}move${DEFAULT} session ==> [ $(echo $line | awk '{print $1 " " $2 " " $3 " " $10}') ]"
    done
    tmux list-windows | sed '/active/d' | while read line; do
      echo -e "${CYAN}move${DEFAULT} window  ==> [ $(echo $line | awk '{print $1 " " $2 " " $3 " " $4 " " $5}') ]"
    done
  fi

  ## new
  [ -n $TMUX ] && echo -e "${BLUE}new${DEFAULT} window"
  echo -e "${BLUE}new${DEFAULT} session"

  ## kill
  [ -n $TMUX ] && [[ $(tmux display-message -p '#{session_windows}') -gt 1 ]] && \
    echo -e "${RED}kill${DEFAULT} windows"
  tmux has-session 2>/dev/null && echo -e "${RED}kill${DEFAULT} sessions"

  ## detach / exit
  [ -n $TMUX ] && echo detach
  echo -e "${GREEN}${BOLD}exit${DEFAULT}"
}

tmuximum::kill-session() {
  answer=$(tmuximum::kill-session-list | $finder)
  case $answer in
    *kill*Server*)
      tmux kill-server
      tmuximum::operation
      ;;
    *kill*windows*)
      tmux kill-session -t $(echo "$answer" | awk '{print $4}' | sed "s/://g")
      tmux has-session 2>/dev/null && tmuximum::kill-session || tmuximum::operation
      ;;
    back)
      tmuximum::operation
  esac
}

tmuximum::kill-session-list() {
  sessions=$(tmux list-sessions 2>/dev/null);
  echo "$sessions" | while read line; do
    [[ "$line" =~ attached ]] && line="${GREEN}"$line"${DEFAULT}"
    echo -e "${RED}kill${DEFAULT} ==> [ "$line" ]"
  done
  [ $(echo "$sessions" | grep -c '') = 1 ] || echo -e "${RED}kill${DEFAULT} ${RED}Server${DEFAULT}"
  echo -e "${BLUE}back${DEFAULT}"
}

tmuximum::kill-window() {
  if [ $(tmux display-message -p '#{session_windows}') -gt 1 ]; then
    answer=$(tmuximum::kill-window-list | $finder)
    case $answer in
      *kill*)
        tmux kill-window -t $(echo "$answer" | awk '{print $4}' | sed 's/://g')
        tmuximum::kill-window
        ;;
      back)
        tmuximum::operation
    esac
  else
    tmuximum::operation
  fi
}

tmuximum::kill-window-list() {
  tmux list-windows | while read line ; do
    line="$(echo $line | awk '{print $1 " " $2 " " $3 " " $4 " " $5 " " $9}')"
    [[ $line =~ active ]] && line="${GREEN}$line${DEFAULT}"
    echo -e "${RED}kill${DEFAULT} ==> [ $line ]"
  done
  echo -e "${BLUE}back${DEFAULT}"
}

tmuximum::help() {
  cat <<EOF
tmuximum: Usage
$ tmuximum [OPTION]
OPTIONS: -h   Display help message (this message)
         -s   Start kill-session mode
         -w   Start kill-window mode
To quit tmuximum, press Esc or select "exit".
EOF
}

main $@
