#------------------------------------------
# Apperance
#------------------------------------------
# color
set-option -g default-terminal screen-256color
set -g terminal-overrides 'xterm:colors=256'
set -g @colors-solarized '256'

# status bar
set-option -g status-position top
set-option -g status-left-length 90
set-option -g status-right-length 90

set-option -g status-left '#H [Session: #S, Pane: #P]'
set-option -g status-right '#(bash ~/.tmux/wifi) #{battery_icon} #{battery_percentage} | CPU:#{cpu_percentage} | %Y-%m-%d(%a) %H:%M '

set -gq status-utf8 on
set-option -g status-interval 1
set-option -g status-justify centre


#------------------------------------------
# Key binds
#------------------------------------------
set -g prefix C-a
unbind C-b

bind C-l send-keys 'C-l'
bind r source-file ~/.tmux.conf\; display "Reloaded!"


#------------------------------------------
# Copy & Paste
#------------------------------------------
# Vim, Tmux間のクリップボード共有
set-option -g default-command "reattach-to-user-namespace -l $SHELL"
# コピーモードでvimキーバインドを使う
set-window-option -g mode-keys vi

# Prefix + v でcopy-mode-vi, C-c でcopy-mode-vi解除
bind-key v copy-mode \; display "Copy mode!"
bind-key -T copy-mode-vi C-c send-keys -X cancel
# Prefix + y でコピー, Prefix + p でペースト
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Y send-keys -X copy-end-of-line "reattach-to-user-namespace pbcopy"

# Vimっぽい移動
bind-key -T copy-mode-vi ^ send-keys -X start-of-line
bind-key -T copy-mode-vi '$' send-keys -X end-of-line
bind-key -T copy-mode-vi w send-keys -X next-word
bind-key -T copy-mode-vi b send-keys -X previous-word
bind-key -T copy-mode-vi e send-keys -X next-word-end

# 画面上の最上(下)行に移動
bind-key -T copy-mode-vi g send-keys -X top-line
bind-key -T copy-mode-vi G send-keys -X bottom-line
# 前方(後方)検索
bind-key -T copy-mode-vi / send-keys -X search-forward
bind-key -T copy-mode-vi ? send-keys -X search-backward
# ページスクロール
bind-key -T copy-mode-vi C-n send-keys -X page-up
bind-key -T copy-mode-vi C-f send-keys -X page-down
# ページ送り
bind-key -T copy-mode-vi C-u send-keys -X scroll-up
bind-key -T copy-mode-vi C-d send-keys -X scroll-dow

# copy-mode-vi中 vで選択, Vで行, C-vで短形モード, Escで選択解除
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
# bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi Escape send-keys -X clear-selection

bind-key p paste-buffer

#------------------------------------------
# ペイン・ウィンドウ操作
#------------------------------------------
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Prefix + h/v で横/縦にペイン分割
bind-key C-h split-window -h
bind-key C-v split-window -v
# Prefix + n/p でウィンドウ切り替え
bind-key -r n select-window -t :-
bind-key -r p select-window -t :+
# Prefix + H/J/K/L でペインサイズ変更
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5


#------------------------------------------
# vim-tmux-navigator
#------------------------------------------
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"
bind -n C-o select-pane -t :.+


#------------------------------------------
# tmux-resurrect
#------------------------------------------
# vimのセッションの呼び出し
set -g @resurrect-strategy-vim 'session'
# 復活させるプロセスの設定
set -g @resurrect-processes 'irb pry "~rails server" "~rails console"'


#------------------------------------------
# Others
#------------------------------------------
# マウス有効
setw -g mouse on

# キーストロークのディレイを減らす
set -sg escape-time 1


#------------------------------------------
# tpm
#------------------------------------------
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-yank           \
  tmux-plugins/tmux-open           \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-battery        \
  tmux-plugins/tmux-cpu            \
  tmux-plugins/tmux-pain-control   \
  seebi/tmux-colors-solarized      \
'

run-shell '~/.tmux/plugins/tpm/tpm'
