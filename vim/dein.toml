[[plugins]]
repo = 'Shougo/dein.vim'

#----------------------------------------------
# LSP client
#----------------------------------------------
[[plugins]]
repo = 'prabirshrestha/vim-lsp'

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-buffer.vim'
hook_source = '''
let g:asyncomplete_buffer_clear_cache = 1
call asyncomplete#register_source(asyncomplete#sources#buffer#get_source_options({
    \ 'name': 'buffer',
    \ 'whitelist': ['*'],
    \ 'blacklist': ['go'],
    \ 'completor': function('asyncomplete#sources#buffer#completor'),
    \ }))
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-file.vim'
hook_source = '''
call asyncomplete#register_source(asyncomplete#sources#file#get_source_options({
   \ 'name': 'file',
   \ 'whitelist': ['*'],
   \ 'priority': 10,
   \ 'completor': function('asyncomplete#sources#file#completor')
   \ }))
'''

[[plugins]]
repo='prabirshrestha/asyncomplete-neosnippet.vim'
hook_source = '''
call asyncomplete#register_source(asyncomplete#sources#neosnippet#get_source_options({
   \ 'name': 'neosnippet',
   \ 'whitelist': ['*'],
   \ 'completor': function('asyncomplete#sources#neosnippet#completor'),
   \ }))
'''

#----------------------------------------------
# Tag jump
#----------------------------------------------
[[plugins]]
repo = 'lighttiger2505/gtags.vim'
hook_add = '''
  let g:Gtags_Auto_Map = 0
  let g:Gtags_OpenQuickfixWindow = 1
'''

[[plugins]]
repo = 'jsfaint/gen_tags.vim'
hook_add = 'let g:gen_tags#gtags_auto_gen = 1'

# [[plugins]]
# repo = 'ozelentok/denite-gtags'

# # ctags
# [[plugins]]
# repo = 'szw/vim-tags'
# hook_add = '''
#   let g:vim_tags_project_tags_command = "/usr/local/bin/ctags -R {OPTIONS} {DIRECTORY} 2>/dev/null"
#   let g:vim_tags_gems_tags_command = "/usr/local/bin/ctags -R {OPTIONS} `bundle show --paths` 2>/dev/null"
#   " nnoremap <Leader>h :split<CR> :exe("tjump ".expand('<cword>'))<CR>
#   " nnoremap <Leader>v :vsplit<CR> :exe("tjump ".expand('<cword>'))<CR>
# '''
#
# [[plugins]]
# repo = 'majutsushi/tagbar'
# hook_add = '''
#   let g:tagbar_width = 30
#   set statusline=%F%m%r%h%w\%=%{tagbar#currenttag('[%s]','')}\[Pos=%v,%l]\[Len=%L]
# '''

#----------------------------------------------
# NERDTree
#----------------------------------------------
[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  let g:NERDTreeShowHidden = 1
  let g:NERDTreeShowBookmarks = 1

  "" NERDTree window is closed when other all buffers are closed
  augroup NERDTreeSettings
    autocmd!
    autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
  augroup END
'''

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'
hook_add = '''
  let g:NERDTreeIndicatorMapCustom = {
    \ "Modified"  : "✹",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "✖",
    \ "Dirty"     : "✗",
    \ "Clean"     : "✔︎",
    \ 'Ignored'   : '☒',
    \ "Unknown"   : "?"
    \ }
'''

[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'
hook_add = '''
	if argc() == 0
		let g:nerdtree_tabs_open_on_console_startup=1
	endif
'''

#----------------------------------------------
# Git
#----------------------------------------------
[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'airblade/vim-gitgutter'

#----------------------------------------------
# Tmux
#----------------------------------------------
[[plugins]]
repo = 'christoomey/vim-tmux-navigator'
hook_add = '''
  let g:tmux_navigator_no_mappings = 1
  nnoremap <silent> <C-f>h  :TmuxNavigateLeft<cr>
  nnoremap <silent> <C-f>j  :TmuxNavigateDown<cr>
  nnoremap <silent> <C-f>k  :TmuxNavigateUp<cr>
  nnoremap <silent> <C-f>l  :TmuxNavigateRight<cr>
  nnoremap <silent> <C-f>\\ :TmuxNavigatePrevious<cr>
'''

[[plugins]]
repo = 'tpope/vim-obsession'

[[plugins]]
repo = 'tmux-plugins/vim-tmux-focus-events'

#----------------------------------------------
# Add commands
#----------------------------------------------
[[plugins]]
repo = 'Shougo/vimproc.vim'

# [[plugins]]
# repo = 'terryma/vim-multiple-cursors'
# hook_add = '''
#   function! Multiple_cursors_before()
#     if exists(':NeoCompleteLock')==2
#       exe 'NeoCompleteLock'
#       echo 'Disabled Neocomplete'
#     endif
#   endfunction
# '''

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  set splitbelow
  set splitright
  let g:quickrun_no_default_key_mappings = 1
"   let g:quickrun_config = {
"      \ '_' : {
"          \ 'runner' : 'vimproc',
"          \ 'runner/vimproc/updatetime' : 40,
"          \ 'outputter' : 'error',
"          \ 'outputter/error/success' : 'buffer',
"          \ 'outputter/error/error'   : 'quickfix',
"          \ 'outputter/buffer/split' : ':botright 8sp',
"      \ }
"  \}
'''

[[plugins]]
repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'AndrewRadev/switch.vim'
hook_add = 'let g:switch_mapping = "S"'

[[plugins]]
repo = 'tyru/caw.vim'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 'junegunn/vim-easy-align'

#----------------------------------------------
# Enhancement
#----------------------------------------------
[[plugins]]
repo = 'scrooloose/syntastic'
hook_add = '''
  let g:syntastic_mode_map = { 'mode': 'passive' }
  let g:syntastic_ruby_checkers = ['rubocop']
'''

[[plugins]]
repo = 'osyo-manga/vim-over'

[[plugins]]
repo = 'rhysd/clever-f.vim'
hook_add = '''
  let g:clever_f_across_no_line = 1
  let g:clever_f_ignore_case = 1
  let g:clever_f_smart_case = 1
  let g:clever_f_fix_key_direction = 1
'''

[[plugins]]
repo = 'rhysd/accelerated-jk'
hook_add = '''
  nmap j <Plug>(accelerated_jk_gj)
  nmap k <Plug>(accelerated_jk_gk)
'''

[[plugins]]
repo = 'yonchu/accelerated-smooth-scroll'
hook_add = '''
  let g:ac_smooth_scroll_du_sleep_time_msec = 7
  let g:ac_smooth_scroll_fb_sleep_time_msec = 7
'''

#----------------------------------------------
# Appearance
#----------------------------------------------
[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['vim-airline-themes']

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'Shougo/context_filetype.vim'
hook_add = '''
  if !exists('g:context_filetype#filetypes')
    let g:context_filetype#filetypes = {}
  endif
'''

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
  let g:indent_guides_guide_size = 1
  let g:indent_guides_start_level = 2
'''
hook_source = '''
  let g:indent_guides_enable_on_vim_startup = 1
  let g:indent_guides_exclude_filetypes = ['help', 'nerdtree']
  let g:indent_guides_auto_colors = 1
'''

[[plugins]]
repo = 'sheerun/vim-polyglot'

#----------------------------------------------
# External plugins
#----------------------------------------------
[[plugins]]
repo = 'rizzatti/dash.vim'

[[plugins]]
repo = 'junegunn/fzf'
build = 'bash install.sh'
merged = '0'

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
hook_add = '''
  let g:fzf_command_prefix = 'Fzf'
  let g:fzf_action = {
  \ 'ctrl-t': 'tab split',
  \ 'ctrl-x': 'split',
  \ 'ctrl-v': 'vsplit' }
  let g:fzf_layout = { 'down': '~30%' }

  command! -bang -nargs=? -complete=dir Files
    \ call fzf#vim#files(<q-args>, fzf#vim#with_preview(), <bang>0)
  command! -bang Colors
    \ call fzf#vim#colors({'left': '15%', 'options': '--reverse --margin 30%,0'}, <bang>0)

  command! FzfFileList call fzf#run({
    \ 'source': 'find . -type d -name .git -prune -o ! -name .DS_Store', 'sink': 'e'
    \ })
  command! FzfMostRecentlyUsed call fzf#run({
    \ 'scommand!ource': v:oldfiles, 'sink': 'tabe', 'options': '-m -x +s', 'down': '40%'
    \ })
'''

#----------------------------------------------
# Colorschemes
#----------------------------------------------
[[plugins]]
repo = 'w0ng/vim-hybrid'

[[plugins]]
repo = 'jonathanfilip/vim-lucius'

[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'gosukiwi/vim-atom-dark'

[[plugins]]
repo = 'jdkanani/vim-material-theme'

[[plugins]]
repo = 'aereal/vim-colors-japanesque'

[[plugins]]
repo = 'danilo-augusto/vim-afterglow'
