#----------------------------------------------
# Completion & Snippets
#----------------------------------------------
[[plugins]]
repo = 'Shougo/neocomplete.vim'
hook_add = '''
  let g:acp_enableAtStartup = 1
  let g:neocomplete#enable_at_startup = 1
  let g:neocomplete#enable_smart_case = 1
  let g:neocomplete#sources#syntax#min_keyword_length = 3

  " For Ruby
  if !exists('g:neocomplete#force_omni_input_patterns')
    let g:neocomplete#force_omni_input_patterns = {}
  endif
  let g:neocomplete#force_omni_input_patterns.ruby = '[^. *\t]\.\w*\|\h\w*::'
  let g:rsenseUseomniFunc = 1

  " Plugin key-mappings.
  inoremap <expr><C-g> neocomplete#undo_completion()
  inoremap <expr><C-l> neocomplete#complete_common_string()
  inoremap <expr><tab>  pumvisible() ? "\<C-n>" : "\<TAB>"
'''
if = "!has('nvim')"
on_i = 1

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#auto_complete_delay = 0
  let g:deoplete#auto_complete_start_length = 1
  let g:deoplete#enable_camel_case = 0
  let g:deoplete#enable_ignore_case = 0
  let g:deoplete#enable_refresh_always = 0
  let g:deoplete#enable_smart_case = 1
  let g:deoplete#file#enable_buffer_path = 1
  let g:deoplete#max_list = 10000

  inoremap <expr><tab>  pumvisible() ? "\<C-n>" : "\<TAB>"
  " inoremap <expr><tab> pumvisible() ? "\<C-n>" :
  "       \ neosnippet#expandable_or_jumpable() ?
  "       \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
if = "has('nvim')"
on_i = 1

[[plugins]]
repo = 'zchee/deoplete-clang'

[[plugins]]
repo = 'zchee/deoplete-jedi'

[[plugins]]
repo = 'zchee/deoplete-go'

[[plugins]]
repo = 'fishbullet/deoplete-ruby'

# repo = 'Shougo/neosnippet.vim'
# repo = 'Shougo/neosnippet-snippets'


#----------------------------------------------
# Unite & Denite
#----------------------------------------------
[[plugins]]
repo = 'Shougo/unite.vim'
if = "!has('nvim')"

[[plugins]]
repo = 'Shougo/denite.nvim'
if = "has('nvim')"


#----------------------------------------------
# Python
#----------------------------------------------
[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = 'Python'


#----------------------------------------------
# Rails
#----------------------------------------------
[[plugins]]
repo = 'tpope/vim-rails'
# repo = 'todesking/ruby_hl_lvar.vim'


#----------------------------------------------
# HTML
#----------------------------------------------
[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = 'html'

[[plugins]]
repo = 'alvan/vim-closetag'
on_ft = 'html'

[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = 'html'

[[plugins]]
repo = 'gko/vim-coloresque'
on_ft = 'html'


#----------------------------------------------
# Markdown
#----------------------------------------------
[[plugins]]
repo = 'kannokanno/previm'
on_ft = 'markdown'

[[plugins]]
repo = 'euclio/vim-markdown-composer'
on_ft = 'markdown'


#----------------------------------------------
# TeX
#----------------------------------------------
[[plugins]]
repo = 'lervag/vimtex'
hook_source = '''
  let g:vimtex_compiler_latexmk = {
        \ 'background': 1,
        \ 'build_dir': '',
        \ 'continuous': 1,
        \ 'options': [
        \    '-pdfdvi',
        \    '-verbose',
        \    '-file-line-error',
        \    '-synctex=1',
        \    '-interaction=nonstopmode',
        \],
        \}
  let g:vimtex_compiler_latexmk = {'callback': 0}
  let g:vimtex_latexmk_continuous = 1
  let g:vimtex_latexmk_options = '-pdfdvi'
  let g:tex_conceal = ''
  let g:vimtex_fold_envs = 0
  let g:vimtex_view_general_viewer = '/Applications/Skim.app/Contents/SharedSupport/displayline'
  " let g:vimtex_view_general_options = '--unique @pdf\#src:@line@tex'
'''
on_ft = 'tex'


#----------------------------------------------
# Others
#----------------------------------------------
[[plugins]]
repo = 'cohama/lexima.vim'
hook_source = '''
  " latex settings
  call lexima#add_rule({'char': '$', 'input_after': '$', 'filetype': 'latex'})
  call lexima#add_rule({'char': '$', 'at': '\%#\$', 'leave': 1, 'filetype': 'latex'})
  call lexima#add_rule({'char': '<BS>', 'at': '\$\%#\$', 'delete': 1, 'filetype': 'latex'})
'''
on_i = 1


#----------------------------------------------
# Syntaxs
#----------------------------------------------
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'plasticboy/vim-markdown'
hook_add = 'let g:vim_markdown_folding_disabled=1'
on_ft = 'markdown'
