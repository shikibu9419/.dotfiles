#----------------------------------------------
# Completion & Snippets
#----------------------------------------------
[[plugins]]
repo = 'Shougo/neocomplete.vim'
if = "has('lua')"
hook_add = '''
  let g:acp_enableAtStartup = 0
  let g:neocomplete#enable_at_startup = 1
  let g:neocomplete#enable_smart_case = 1
  let g:neocomplete#sources#syntax#min_keyword_length = 3

  " For Ruby
  if !exists('g:neocomplete#force_omni_input_patterns')
    let g:neocomplete#force_omni_input_patterns = {}
  endif
  let g:neocomplete#force_omni_input_patterns.ruby = '[^. *\t]\.\w*\|\h\w*::'
  let g:rsenseUseomniFunc = 1

  " Plugin key-mappings.
  inoremap <expr><C-g> neocomplete#undo_completion()
  inoremap <expr><C-l> neocomplete#complete_common_string()
  inoremap <expr><tab>  pumvisible() ? "\<C-n>" : "\<TAB>"
'''
on_i = 1

# repo = 'Shougo/neosnippet.vim'
# repo = 'Shougo/neosnippet-snippets'


#----------------------------------------------
# Ruby
#----------------------------------------------
# repo = 'tpope/vim-rails'
# repo = 'todesking/ruby_hl_lvar.vim'


#----------------------------------------------
# TeX
#----------------------------------------------
[[plugins]]
repo = 'lervag/vimtex'
hook_source = '''
  let g:vimtex_latexmk_continuous = 1
  let g:vimtex_latexmk_options = '-pdfdvi'
  let g:vimtex_view_general_viewer = 'skim'
  " let g:vimtex_view_general_options = '--unique @pdf\#src:@line@tex'
'''


#----------------------------------------------
# Markdown
#----------------------------------------------
[[plugins]]
repo = 'plasticboy/vim-markdown'
hook_add = 'let g:vim_markdown_folding_disabled=1'
on_ft = ['markdown']

[[plugins]]
repo = 'kannokanno/previm'
on_ft = ['markdown']
