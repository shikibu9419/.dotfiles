[[plugins]]
repo = 'Shougo/dein.vim'


#----------------------------------------------
# Git
#----------------------------------------------
[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
  let g:lightline#extensions#branch#enabled=1
  nmap [fugitive] <Nop>
  map <Leader>g [fugitive]
  nmap <silent> [fugitive]s :<C-u>Gstatus<CR>
  nmap <silent> [fugitive]d :<C-u>Gdiff<CR>
  nmap <silent> [fugitive]b :<C-u>Gblame<CR>
  nmap <silent> [fugitive]l :<C-u>Glog<CR>
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'


#----------------------------------------------
# Tmux
#----------------------------------------------
[[plugins]]
repo = 'christoomey/vim-tmux-navigator'
hook_add = '''
  let g:tmux_navigator_no_mappings = 1
  let g:tmux_navigator_save_on_switch = 2

  nnoremap <silent> <C-h> :TmuxNavigateLeft<cr>
  nnoremap <silent> <C-j> :TmuxNavigateDown<cr>
  nnoremap <silent> <C-k> :TmuxNavigateUp<cr>
  nnoremap <silent> <C-l> :TmuxNavigateRight<cr>
  nnoremap <silent> <C-/> :TmuxNavigatePrevious<cr>
'''

[[plugins]]
repo = 'tpope/vim-obsession'


#----------------------------------------------
# Tags
#----------------------------------------------
# gtags
# [[plugins]]
# repo = 'lighttiger2505/gtags.vim'
# hook_add = '''
#   let g:Gtags_Auto_Map = 0
#   let g:Gtags_OpenQuickfixWindow = 1
#   nmap <silent> K :<C-u>exe("Gtags ".expand('<cword>'))<CR>
#   nmap <silent> R :<C-u>exe("Gtags -r ".expand('<cword>'))<CR>
# '''

# [[plugins]]
# repo = 'jsfaint/gen_tags.vim'
# hook_add = 'let g:gen_tags#gtags_auto_gen = 1'

# ctags
# [[plugins]]
# repo = 'szw/vim-tags'
# hook_add = '''
#   let g:vim_tags_project_tags_command = "/usr/local/bin/ctags -R {OPTIONS} {DIRECTORY} 2>/dev/null"
#   let g:vim_tags_gems_tags_command = "/usr/local/bin/ctags -R {OPTIONS} `bundle show --paths` 2>/dev/null"
#
#   nnoremap <Leader>h :split<CR> :exe("tjump ".expand('<cword>'))<CR>
#   nnoremap <Leader>v :vsplit<CR> :exe("tjump ".expand('<cword>'))<CR>
# '''

# [[plugins]]
# repo = 'majutsushi/tagbar'
# hook_add = '''
#   let g:tagbar_width = 30
#   set statusline=%F%m%r%h%w\%=%{tagbar#currenttag('[%s]','')}\[Pos=%v,%l]\[Len=%L]
# '''


#----------------------------------------------
# NERDTree.vim
#----------------------------------------------
# ファイルのツリー表示
[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  " ファイル指定なしのとき自動起動
  let g:NERDTreeShowHidden=1
  " ブックマーク
  let g:NERDTreeShowBookmarks=1
  nmap <Leader>n :NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'
hook_add = '''
  let g:NERDTreeIndicatorMapCustom = {
    \ "Modified"  : "✹",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "✖",
    \ "Dirty"     : "✗",
    \ "Clean"     : "✔︎",
    \ 'Ignored'   : '☒',
    \ "Unknown"   : "?"
    \ }
'''

# NERDTree のタブ間共有
[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'
hook_add = '''
	if argc() == 0
		let g:nerdtree_tabs_open_on_console_startup=1
	endif
'''


#----------------------------------------------
# Others
#----------------------------------------------
[[plugins]]
repo = 'itchyny/lightline.vim'

[[plugins]]
repo = 'rizzatti/dash.vim'
hook_add = 'nmap <silent> <Leader>d <Plug>DashSearch'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  set splitbelow
  set splitright
'''
hook_post_source = 'nmap <Leader>r <Plug>(quickrun)'

[[plugins]]
repo = 'scrooloose/syntastic'
hook_add = '''
  let g:syntastic_mode_map = { 'mode': 'passive' }
  let g:syntastic_ruby_checkers = ['rubocop']

  nnoremap <Leader>s :SyntasticCheck<CR>
'''

[[plugins]]
repo = 'tyru/open-browser.vim'
hook_add = '''
  nmap <Leader>b <Plug>(openbrowser-smart-search)
  vmap <Leader>b <Plug>(openbrowser-smart-search)
'''

[[plugins]]
repo = 'rhysd/accelerated-jk'
hook_add = '''
  nmap j <Plug>(accelerated_jk_gj)
  nmap k <Plug>(accelerated_jk_gk)
'''

[[plugins]]
repo = 'yonchu/accelerated-smooth-scroll'
hook_add = '''
  let g:ac_smooth_scroll_du_sleep_time_msec = 7
  let g:ac_smooth_scroll_fb_sleep_time_msec = 7
'''

[[plugins]]
repo = 'osyo-manga/vim-over'
hook_add = 'nnoremap <silent> <Leader>o :OverCommandLine<CR>'

[[plugins]]
repo = 'rhysd/clever-f.vim'
hook_add = '''
  let g:clever_f_across_no_line = 1
  let g:clever_f_ignore_case = 1
  let g:clever_f_smart_case = 1
  let g:clever_f_fix_key_direction = 1
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'
hook_add = '''
  if !exists('g:context_filetype#filetypes')
    let g:context_filetype#filetypes = {}
  endif
'''

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'AndrewRadev/switch.vim'
hook_add = 'let g:switch_mapping = "S"'

[[plugins]]
repo = 'tomtom/tcomment_vim'
# repo = 'tyru/caw.vim'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

# [[plugins]]
# repo = 'nathanaelkane/vim-indent-guides'
# hook_source = '''
#   " let g:indent_guides_enable_on_vim_startup = 1
#   " let g:indent_guides_exclude_filetypes = ['help', 'nerdtree']
#   " let g:indent_guides_auto_colors = 1
#   " autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=black
#   " autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=darkgrey
# '''

[[plugins]]
repo = 'Yggdroot/indentLine'

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
  map ga <Nop>
  nmap ga <Plug>(EasyAlign)
  vmap ga <Plug>(EasyAlign)
'''


#----------------------------------------------
# Colorschemes
#----------------------------------------------
[[plugins]]
repo = 'nanotech/jellybeans.vim'

[[plugins]]
repo = 'w0ng/vim-hybrid'

[[plugins]]
repo = 'jonathanfilip/vim-lucius'

[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'gosukiwi/vim-atom-dark'

[[plugins]]
repo = 'raphamorim/lucario'

[[plugins]]
repo = 'jdkanani/vim-material-theme'

[[plugins]]
repo = 'jacoborus/tender.vim'

[[plugins]]
repo = 'dracula/vim'

[[plugins]]
repo = 'joshdick/onedark.vim'
hook_source = 'let g:one_dark_termcolors=16'

[[plugins]]
repo = 'aereal/vim-colors-japanesque'

[[plugins]]
repo = 'danilo-augusto/vim-afterglow'
